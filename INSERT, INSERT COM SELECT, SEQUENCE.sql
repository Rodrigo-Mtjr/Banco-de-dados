--INSERT EM TABELAS


--INSERT COM DESCRIÇÃO DOS CAMPOS
--INSERT PARA UMA NOVA TABELA
--INSERT COM SELECT
------------------------------------------------------------------------------------------

--ACRESCENTANDO INFORMAÇÕES NA TABELA DE ALUNOS

SELECT *
FROM Alunos;

SELECT MAX(ID_ALUNO)
FROM Alunos;

SELECT MAX(ID_ALUNO) +1 -- ESSE SERIA UM METODO COMUM PARA ACRESCENTAR ALGO EM TABELAS 
FROM Alunos;
--PRIMEIRO IRIAMOS VER A QUANTIDADE DE ID QUE TEM REGISTRADO DENTRO DA TABELA E DEPOIS IRIAMOS ACRESCENTAR A PARTIR DISSO
------------------------------------------------------------------------------------------

--SEQUENCE

CREATE SEQUENCE SEQ_TBALUNOS -- DEFININDO O NOME DA SEQUENCE
	START WITH 12 --MOSTRANDO DE QUAL POSIÇÃO IRA COMEÇAR, NESSE CASO É 12, POIS SÓ TEM ATE O 11 NA TABELA DE ALUNOS
	INCREMENT BY 1 --INCREMENTANDO SEMPRE DE 1 EM 1

SELECT NEXT VALUE FOR SEQ_TBALUNOS;
------------------------------------------------------------------------------------------

--IDENTIFICAR CAMPOS EM TABELAS
EXEC SP_COLUMNS ALUNOS;
------------------------------------------------------------------------------------------

--INSERT COM A DESCRIÇÃO DOS CAMPOS

--EXEMPLO 1 

INSERT INTO DBO.Alunos
	(id_aluno
	,nome
	,data_nascimento
	,sexo
	,data_cadastro
	,login_cadastro)
VALUES
	(NEXT VALUE FOR SEQ_TBALUNOS --EM VEZ DE COLOCAR MANUALMENTE O VALOR DE ID, BASTA APENAS COLOCAR A SEQUENCE.
	,'Lucas Casarotti'
	,'07/07/1990'
	,'M'
	,GETDATE()
	,'LUCASS')

--VERIFICANDO SE A SEQUENCE FUNCIONOU
SELECT *
FROM Alunos
WHERE DATA_CADASTRO >= CONVERT(DATE,GETDATE());
------------------------------------------------------------------------------------------

--EXEMPLO 2 - TABELA CURSOS

EXEC SP_COLUMNS CURSOS;

SELECT *
FROM Cursos;

INSERT INTO DBO.Cursos
	(id_curso
	,nome_curso
	,data_cadastro
	,login_cadastro)
VALUES 
	(12, 'VBA Avançado I', getdate(), 'ALESS');
------------------------------------------------------------------------------------------

--EXEMPLO 3 - TABELA CURSOS

SELECT *
FROM Cursos; -- PARA VER QUANTOS ID TEMOS ANTES DE ACRESCENTAR MAIS

DECLARE @vID INT; --DECLARANDO O NOME DA VARIAVEL E MOSTRANDO QUE ELA SERÁ INTEIRA
SELECT @vID = MAX(ID_CURSO) + 1 -- SELECIONANDO A VARIAVEL E DEFININDO QUE NELA TERA O ID MAXIMO DA COLUNO ID_CURSO DA TABELA CURSOS SOMANDO 1 SEMPRE
FROM DBO.Cursos; --TABELA QUE VOCE ESTA FAZENDO O INSERT DA VARIAVEL

INSERT INTO DBO.Cursos
	(id_curso 
	,nome_curso
	,data_cadastro
	,login_cadastro)
VALUES
	(@vID, 'VBA Avançado II', GETDATE(), 'ALESS');
--LEMBRE-SE DE SEMPRE SELECIONAR TUDO, INCLUSIVE A VARIAVEL DECLARADA LA EM CIMA.

--ESSE METODO DO EXEMPLO 3 DA CERTO, MAS É MAIS TRABALHOSO DO QUE FAZER UMA SEQUENCE.
------------------------------------------------------------------------------------------

--INSERT COM A CRIAÇÃO DE UMA NOVA TABELA 

SELECT *
INTO DBO.TBNOVA
FROM DBO.Cursos;

--NESSE CASO ESTAMOS DIZENDO PARA QUE O SQL INSIRA NA NOVA TABELA TODOS OS CAMPOS E INFORMAÇÕES
--DA TABELA CURSOS, NO CASO, COPIANDO ELA INTEIRA.

SELECT *
FROM DBO.TBNOVA;

DROP TABLE DBO.TBNOVA;
------------------------------------------------------------------------------------------

--DELETANDO AS LINHAS DA TABELA, DEIXANDO APENAS AS COLUNAS

DELETE 
FROM DBO.TBNOVA; -- ESSE COMANDO EXCLUI TODAS AS LINHAS DA TABELA, DEIXANDO APENAS AS COLUNAS

EXEC SP_COLUMNS TBNOVA; --VERIFICANDO A ESTRUTURA DA TABELA COM O COMANDO EXEC SP_COLUMNS
------------------------------------------------------------------------------------------

--INSERT COM SELECT

--EXEMPLO 1
INSERT INTO TBNOVA
	(ID_CURSO
	,NOME_CURSO
	,DATA_CADASTRO
	,LOGIN_CADASTRO)
SELECT ID_CURSO
	  ,NOME_CURSO
	  ,GETDATE()
	  ,'TROVATO'
FROM Cursos
WHERE id_curso > 5;

--NESSE EXEMPLO DE CIMA, ESTAMOS PEDINDO PARA QUE O SISTEMA PEGUES AS INFORMAÇÕES DA TABELA CURSOS COM ID ACIMA DE 5
--E COPIE PARA A TABELA TBNOVA, LEMBRANDO SEMPRE DE COLOCAR AS COLUNAS EM ORDEM NAS DUAS, TANTO NO INSERT, TANTO NO SELECT

SELECT *
FROM TBNOVA;

DELETE 
FROM DBO.TBNOVA; --EXCLUINDO AS LINHAS DA TABELA

--EXEMPLO 2
INSERT INTO TBNOVA	
		(ID_CURSO, NOME_CURSO, DATA_CADASTRO, LOGIN_CADASTRO)
SELECT *
FROM CURSOS
WHERE nome_curso like '%VBA%' -- LIKE SIGNIFICA TENHA, 'CUJO O NOME DO CURSO TENHA VBA'